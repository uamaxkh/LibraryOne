@{
    @model DBLib.Models.Book
    ViewBag.Title = @Model.Title;
}

<h1>@Model.Title</h1>
<h4 title="Кількість прочитань">
    <span class="label label-default"><span class="glyphicon glyphicon-lamp"> @ViewBag.BookRating</span></span>
    @if (User.IsInRole("librarian"))
    {
        <span class="btn btn-default btn-sm">Додано: @Model.AddingDate</span>
    }
</h4>
<hr />

@if (Model.Deleted)
{
    <h3 class="alertInfo bg-danger text-primary"><strong>КНИГУ ВИДАЛЕНО!</strong></h3>
}
<div class="container-fluid @(Model.Deleted ? "bg-danger": "")">
    <div class="row">
        <div class="col-xs-6 col-md-4">
            <div>
                @Html.LabelFor(b => b.ISBN)
                @Html.DisplayFor(b => b.ISBN)
            </div>
            <div>
                @Html.LabelFor(b => b.Pages)
                @Html.DisplayFor(b => b.Pages)
            </div>
            <div>
                @Html.LabelFor(b => b.Quantity)
                @Html.DisplayFor(b => b.Quantity)
                <div>Вільно: @ViewBag.freeBookCount</div>
            </div>
            <div>
                @Html.LabelFor(b => b.Title)
                @Html.DisplayFor(b => b.Title)
            </div>
            <div>
                @Html.LabelFor(b => b.Year)
                @Html.DisplayFor(b => b.Year)
            </div>
            @if (Model.LibraryReading)
            {
                <div class="btn btn-warning btn-sm">
                    Доступна для читання лише в бібліотеці!
                </div>
            }
            else
            {
                <div class="btn btn-success btn-sm">
                    Доступна для читання вдома
                </div>
            }
            <div>
                @Html.LabelFor(b => b.Publisher.Name)
                <a href="@Url.Action("ShowPublisher", "Home", new { id = Model.Publisher.Id })">@Model.Publisher.Name</a>
            </div>
            <div>
                @Html.LabelFor(b => b.Section.Name)
                <a href="@Url.Action("ShowSection", "Home", new { id = Model.Section.Id })">@Model.Section.Name</a>
            </div>
            <div>
                @Html.LabelFor(b => b.Authors)
                @foreach (var author in Model.Authors)
                {
                    <a href="@Url.Action("ShowAuthor", "Home", new { id = author.Id })">@author.Name</a>
                }
            </div>
            @if (@ViewBag.userExist && !User.IsInRole("librarian"))
            {
                if (ViewBag.userOrderedTheBook) //Book is ordered by this user
                {
                    <div id="addBookOrder" class="btn btn-primary hidden">Замовити</div>
                    <div id="cancelBookOrder" class="btn btn-danger">Відмінити</div>
                }
                else
                {
                    //User don`t has penalty, he can order book
                    if (!ViewBag.userHasPenalty)
                    {
                        if (ViewBag.userTakeTheBook)
                        {
                            <div class="btn btn-warning">Ця книга вже у вас на руках</div>
                        }
                        //If the book is free (at least one)
                        else if (@ViewBag.freeBookCount > 0)
                        {
                            <div id="addBookOrder" class="btn btn-primary">Замовити</div>
                            <div id="cancelBookOrder" class="btn btn-danger hidden">Відмінити</div>
                        }
                        else
                        {
                            <div class="btn btn-default">Вільних книг немає</div>
                        }
                    }
                    else
                    {
                        <a href="@Url.Action("MyBooks")"><div class="btn btn-danger">Ви маєте заборгованість!</div></a>
                    }
                }
            }
            else if (User.IsInRole("librarian"))
            {
                @Html.ActionLink("Редагувати книгу", "EditBook", "LibraryManage", new { id = Model.Id }, new { @class = "btn btn-warning" });
            }
            else
            {
                @Html.ActionLink("Щоб замовити книгу, необхідно увійти", "Login", "Account", null, new { @class = "btn btn-default" });
            }
        </div>
        <div class="col-xs-6 col-md-2">
            <img class="bookTitleImgLj" src="~/TitlePic/@{@Model.Id;}.jpg" onerror="imgError(this)" />
        </div>
    </div>
</div>
@Html.Partial("_Comments", (List<DBLib.Models.Comment>)ViewBag.Comments)

@section scripts{
    <script>
        $("#addBookOrder").click(addBookOrder);
        $("#cancelBookOrder").click(cancelBookOrder);

        function toggleOrderBtn() {
            $("#addBookOrder").toggleClass("hidden");
            $("#cancelBookOrder").toggleClass("hidden");
        }

        function addBookOrder() {
            $.ajax({
                url: '@Url.Action("BookOrder")',
                data: { BookId: '@Model.Id', UserId: '@ViewBag.userId' },
                type: 'POST',
                dataType: "json",
                success: function (data)
                {
                    toggleOrderBtn();
                    if (data != "success")
                        alert(data);
                },
                error: function(xhr, status, error){
                    alert("Помилка :(");
                }
             });
        }

        function cancelBookOrder() {
            $.ajax({
                url: '@Url.Action("CancelBookOrder")',
                data: { BookId: '@Model.Id', UserId: '@ViewBag.userId' },
                type: 'POST',
                dataType: "json",
                success: function (data)
                {
                    toggleOrderBtn();
                    if (data != "success")
                        alert(data);
                },
                error: function(xhr, status, error){
                    alert("Помилка :(");
                }
             });
        }
    </script>
}