@{
    ViewBag.Title = "AddBook";
    @model Library.Models.AddBooksViewModels
}

<h2>AddBook</h2>
<div class="panel panel-info">
    <div class="panel-heading text-uppercase">Додати книгу</div>
    <div class="panel-body">
        <form method="post" action="/Home/AddBook" role="form" enctype="multipart/form-data">
            <div>
                @Html.LabelFor(m => m.AuthorsId)
                <input type="text" oninput="getAuthorsByNameTerm()" id="authorSearch"/>
                <select hidden id="authorSelect" class="authorSelect">
                </select>
                @Html.ValidationMessageFor(m => m.AuthorsId)
                <div id="selectAuthorBnt" disabled class="btn btn-default btn-xs" onclick="selectAuthor()">Обрати автора</div>
                <div id="addAuthorBnt" class="btn btn-default btn-xs" onclick="addAuthorToDB()">Зберегти нового автора</div>
                <div id="selectedAuthorsDisplay"></div>
            </div>
            <div>
                @Html.LabelFor(m => m.ISBN)
                @Html.TextBoxFor(m => m.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ISBN)
            </div>
            <div>
                @Html.LabelFor(m => m.LibraryReading)
                <input type="checkbox" value="true" name="LibraryReading" />
                @Html.ValidationMessageFor(m => m.LibraryReading)
            </div>
            <div>
                @Html.LabelFor(m => m.Pages)
                @Html.TextBoxFor(m => m.Pages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Pages)
            </div>
            <div>
                @Html.LabelFor(m => m.PublisherId)
                @Html.DropDownList("PublisherId", ViewBag.publishersSelectList as SelectList)
                @Html.ValidationMessageFor(m => m.PublisherId)
            </div>
            <div>
                @Html.LabelFor(m => m.Quantity)
                @Html.TextBoxFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Quantity)
            </div>
            <div>
                @Html.LabelFor(m => m.SectionId)
                @Html.DropDownList("SectionId", ViewBag.sectionsSelectList as SelectList)
                @Html.ValidationMessageFor(m => m.SectionId)
            </div>
            <div>
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Title)
            </div>
            <div>
                @Html.LabelFor(m => m.Year)
                @Html.TextBoxFor(m => m.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Year)
            </div>
            <div>
                @Html.LabelFor(m => m.TitlePic)
                <input type="file" name="TitlePic" id="TitlePic" />
            </div>
            <button type="submit" class="btn btn-sm btn-primary">Додати книгу</button>
        </form>
    </div>
</div>

@section scripts{
    <script src="~/Scripts/myScripts.js"></script>
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/jquery-ui-git.css">

    <script>
        var authorsArray = getAllAuthors();

        function getAllAuthors() {
            $.ajax({
                url: '@Url.Action("GetAuthorsJson")',
                //type: 'POST',
                dataType: "json",
                success: function (data)
                {
                    authorsArray = data;
                },
                error: function(xhr, status, error){
                    alert("Error");
                }
             });
        }

        function getAuthorsByNameTerm() {
            var authorNameTerm = $("#authorSearch").val();

            var authorsFind = authorsArray.filter(function (element) {
                if (element.Name.toLowerCase().includes(authorNameTerm.toLowerCase()))
                    return true;
                return false;
            });

            $("#authorSelect").empty();
            
            if (authorsFind.length == 0) {
                $("#authorSelect").hide();
                $("#selectAuthorBnt").attr('disabled', 'disabled');
                return 0;
            }
            $("#authorSelect").show();
            $("#selectAuthorBnt").removeAttr('disabled');

            authorsFind.map(function (author) {
                $('<option type="text" readonly value="'
                    + author.Id + '">' + author.Name + '</option>').appendTo("#authorSelect");
            });
        }

        function selectAuthor(Id, Name) {
            var authorId = (Id != undefined) ? Id : $("#authorSelect option:selected").val();
            var authorName = (Name != undefined) ? Name : $("#authorSelect option:selected").text();
            if (authorId != undefined) {
                $('<div><input type="checkbox" readonly checked name="AuthorsId" value="' + authorId + '">' + authorName + '</div>').appendTo("#selectedAuthorsDisplay");
                $('#authorSearch').val('');
                $("#authorSelect").empty();
                $("#authorSelect").hide();
                $("#selectAuthorBnt").attr('disabled', 'disabled');
            }
        }

        function addAuthorToDB() {
            var authorName = $('#authorSearch').val().trim();
            $.ajax({
                url: '@Url.Action("AddAuthorToDB")',
                type: 'POST',
                data: { authorName: authorName },
                success: function (Id) {
                    switch (Id) {
                        case "-1": alert("Помилка додавання автора в БД"); break;
                        case "0": alert("Цей автор вже є в БД"); break;
                        case "Закоротке ім'я": alert("Закоротке ім'я"); break;
                        default: alert("Автор успішно доданий"); selectAuthor(Id, authorName); break;
                    }
                },
                error: function () {
                    alert('Помилка при додаванні');
                }
            });
        }
    </script>
}