@{
    ViewBag.Title = "AddBook";
    @model Library.Models.AddBooksViewModels
}

<h2>AddBook</h2>
<div class="panel panel-info">
    <div class="panel-heading text-uppercase">Додати книгу</div>
    <div class="panel-body">
        <form method="post" action="/Home/AddBook" role="form" enctype="multipart/form-data">
            <div>
                @Html.LabelFor(m => m.AuthorsNames)
                <div id="authorSection" class="authorSection"></div>
                @Html.TextBox("searchTerm", null, new { id = "Search" })
                @Html.ValidationMessageFor(m => m.AuthorsNames)
                <div id="selectAuthorBnt" class="btn btn-default btn-xs" onclick="selectAuthor()">Обрати автора</div>
                <div id="addAuthorBnt" class="btn btn-default btn-xs" onclick="saveAuthor()">Зберегти нового автора</div>
            </div>
            <div>
                @Html.LabelFor(m => m.ISBN)
                @Html.TextBoxFor(m => m.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ISBN)
            </div>
            <div>
                @Html.LabelFor(m => m.LibraryReading)
                <input type="checkbox" value="true" name="LibraryReading" />
                @Html.ValidationMessageFor(m => m.LibraryReading)
            </div>
            <div>
                @Html.LabelFor(m => m.Pages)
                @Html.TextBoxFor(m => m.Pages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Pages)
            </div>
            <div>
                @Html.LabelFor(m => m.PublisherId)
                @Html.DropDownList("PublisherId", ViewBag.publishersSelectList as SelectList)
                @Html.ValidationMessageFor(m => m.PublisherId)
            </div>
            <div>
                @Html.LabelFor(m => m.Quantity)
                @Html.TextBoxFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Quantity)
            </div>
            <div>
                @Html.LabelFor(m => m.SectionId)
                @Html.DropDownList("SectionId", ViewBag.sectionsSelectList as SelectList)
                @Html.ValidationMessageFor(m => m.SectionId)
            </div>
            <div>
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Title)
            </div>
            <div>
                @Html.LabelFor(m => m.Year)
                @Html.TextBoxFor(m => m.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Year)
            </div>
            <div>
                @Html.LabelFor(m => m.TitlePic)
                <input type="file" name="TitlePic" id="TitlePic" />
            </div>
            <button type="submit" class="btn btn-sm btn-primary">Додати книгу</button>
        </form>
    </div>
</div>

<datalist id="authorsList">
    <option value="Id">Чебурашка</option>
</datalist>

@section scripts{
    <script src="~/Scripts/myScripts.js"></script>
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/jquery-ui-git.css"></link>

    <script>
        function getAuthors(request, response) {
            $.ajax({
                      url: '@Url.Action("GetAuthorsJson")',
                      //type: 'POST',
                      dataType: "json",
                      data: { search: $("#Search").val() },
                      success: function (data) {
                          response($.map(data, function (item) {
                              return { label: item.Name, value: item.Name }
                          }))
                      },
                      error: function(xhr, status, error){
                          alert("Error");
                      }
                  });
        }

      $( function() {
          $("#Search").autocomplete({
              source: getAuthors
          });
        });

        function selectAuthor() {
            var authorName = $('#Search').val(); //.trim();
            $('<div><input type="text" readonly name="AuthorsNames" value="' + authorName + '" /></div>').appendTo("#authorSection");
            $('#Search').val('');
        }

        function saveAuthor() {
            var authorName = $('#Search').val(); //.trim();
            $.ajax({
                url: '@Url.Action("AddAuthorToDB")',
                type: 'POST',
                data: { authorName: authorName },
                success: function (data) {
                    alert(data.Message);
                    //queryStatusCode == 0 -IS- QueryStatusCode.Succes
                    if (data.queryStatusCode == 0) {
                        selectAuthor();
                    };
                },
                error: function () {
                    alert('Помилка при додаванні');
                }
            });
        }
    </script>
}