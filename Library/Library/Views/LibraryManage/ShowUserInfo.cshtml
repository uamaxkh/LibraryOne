
@{
    ViewBag.Title = "Інформація про користувача";
    @model List<DBLib.Models.BooksRenting>
}
<div id="ifBanned-Red" class="@(ViewBag.usersInfo.IsBanned ? "bg-danger" : "")">
    <h2>
        Користувач: @ViewBag.usersInfo.Surname @ViewBag.usersInfo.Name
        @if (User.IsInRole("admin"))
        {
            <button id="unBlockUserBtn" class="btn btn-success @(ViewBag.usersInfo.IsBanned ? "" : "hidden")">Розблокувати користувача</button>
            <button id="blockUserBtn" class="btn btn-danger @(ViewBag.usersInfo.IsBanned ? "hidden" : "")">Заблокувати користувача</button>
        }
        else
        {
            if (ViewBag.usersInfo.IsBanned)
            {
                <button class="btn btn-danger">Заблокований</button>
            }
        }
    </h2>

<h5>Дата реєстрації: @ViewBag.usersInfo.RegistrationDate</h5>

@if (ViewBag.booksOrdered.Count > 0)
{
    <h4 class="bg-info alertMessage">Замовлені книги</h4>
    <ul id="booksOrdered">
        @{
            using (Html.BeginForm("UserTakingBook", "LibraryManage", FormMethod.Post, new { @class = "displayInline-block" }))
            {
                <input type="hidden" name="userId" value="@ViewBag.usersInfo.Id" />
                foreach (var br in ViewBag.booksOrdered)
                {
                <li id="order-@br.Id" class="bookRentingUl">
                    <a href="@Url.Action("ShowBook", "Home", new { id = br.Book.Id})">@br.Book.Title</a>
                    @if (br.Book.LibraryReading)
                    {
                        <span class="btn btn-xs btn-warning">Читання в бібліотеці</span>
                    }
                    
                    <ul>
                        <li>Заброньовано: @br.OrderDate.ToString("dd/MM/yyyy")</li>
                        <li>
                            <button @(ViewBag.usersInfo.IsBanned ? "disabled" : "") type="submit" value="@br.Id" name="orderForTakingId" class="btn btn-xs btn-success">Видати книгу</button>
                            <div onclick="removeOrder('@br.Id')" class="btn btn-xs btn-danger">Скасувати замовлення</div>
                        </li>
                    </ul>
                </li>
                }
            }
        }
    </ul>
    <div class="text-muted text-center"><span class="glyphicon glyphicon-info-sign"></span> Замовлення, яким більше 24 годин, видаляються автоматично</div>
}
else
{
    <h4 class="bg-warning alertMessage">Замовлені книги відсутні</h4>
}


@if (ViewBag.booksTaked.Count > 0)
{
    <h4 class="bg-info alertMessage">Взяті книги</h4>
    <ul id="booksTaked">
        @{
            using (Html.BeginForm("UserReturningBook", "LibraryManage", FormMethod.Post, new { @class = "displayInline-block" }))
            {
                <input type="hidden" name="userId" value="@ViewBag.usersInfo.Id" />
                foreach (var br in ViewBag.booksTaked)
                {
                    <li class="bookRentingUl @(br.IsHasPenalty ? "bg-danger" : "" )">
                        <a href="@Url.Action("ShowBook", "Home", new { id = br.Book.Id })">
                            @br.Book.Title
                        </a>
                        @if (br.Book.LibraryReading)
                        {
                            <span class="btn btn-xs btn-warning">Читання в бібліотеці</span>
                        }
                        @if (!br.Book.LibraryReading)
                        {
                            <ul>
                                <li>Взято: @br.TakingDate.ToString("dd/MM/yyyy")</li>
                                <li>
                                    Повернути: @br.GetReturningDate.ToString("dd/MM/yyyy")
                                    @if (br.IsHasPenalty)
                                    {
                                        <strong> - Нараховано ШТРАФ: @br.GetFineValue грн.</strong>
                                    }
                                </li>
                                <li>
                                    <button @(ViewBag.usersInfo.IsBanned ? "disabled" : "") type="submit" value="@br.Id" name="orderForReturningId" class="btn btn-xs btn-success">Повернути книгу</button>
                                </li>
                            </ul>
                        }
                    </li>
                }
            }
        }
    </ul>
}
else
{
    <h4 class="bg-warning alertMessage">Взяті книги відсутні</h4>
}
</div>

@section scripts
{
    <script>
        function toggleBlockUserBtns() {
            $("#unBlockUserBtn").toggleClass("hidden");
            $("#blockUserBtn").toggleClass("hidden");
            $("#ifBanned-Red").toggleClass("bg-danger");
        }

        function blockUser()
        {
            $.ajax({
                url: '@Url.Action("BlockingUser", "LibraryManage")',
                type: 'POST',
                data: { userId: '@ViewBag.usersInfo.Id', setBlock: 'true'},
                success: () => {
                     alert("Користувач заблокований");
                     toggleBlockUserBtns();
                },
                error: function () {
                     alert('Помилка при блокуванні');
                }
            });
        }

        function unBlockUser()
        {
            $.ajax({
                url: '@Url.Action("BlockingUser", "LibraryManage")',
                type: 'POST',
                data: { userId: '@ViewBag.usersInfo.Id', setBlock: 'false'},
                success: () => {
                     alert("Користувач розблокований");
                     toggleBlockUserBtns();
                },
                error: function () {
                     alert('Помилка при розблокуванні');
                }
            });
        }


        $("#unBlockUserBtn").click(unBlockUser);
        $("#blockUserBtn").click(blockUser);

        function removeOrder(orderId) {
            $.ajax({
                url: '@Url.Action("removeBookOrder", "LibraryManage")',
                type: 'POST',
                data: { orderId: orderId},
                success: () => {
                    alert("Замовлення видалено");
                    $("#order-" + orderId).remove();
                },
                error: function () {
                     alert('Помилка при видаленні замовлення');
                }
            });
        }
    </script>
}